import dotenv from 'dotenv';
import path from 'path';
import { Hasura } from '../../lib/hasura'; // –ü—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ñ–∞–π–ª–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
import Debug from '../../lib/debug';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è debug
const debug = Debug('nha:migration:down');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞
dotenv.config({ path: path.resolve(__dirname, '../../.env') });

// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ Hasura
const hasura = new Hasura({
  url: process.env.NEXT_PUBLIC_HASURA_GRAPHQL_URL!, // –ò—Å–ø–æ–ª—å–∑—É–µ–º non-null assertion
  secret: process.env.HASURA_ADMIN_SECRET!,
});

// SQL –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü
const dropTablesSQL = `
  DROP TABLE IF EXISTS public.accounts CASCADE;
  DROP TABLE IF EXISTS public.users CASCADE;
`;

// –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
const tablesToUntrack = [
  {
    type: 'pg_untrack_table',
    args: {
      source: 'default',
      table: {
        schema: 'public',
        name: 'accounts'
      },
      cascade: true // –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
    }
  },
  {
    type: 'pg_untrack_table',
    args: {
      source: 'default',
      table: {
        schema: 'public',
        name: 'users'
      },
      cascade: true // –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è
    }
  }
];

async function dropMetadata() {
  debug('üßπ Untracking tables users and accounts...');
  for (const untrackRequest of tablesToUntrack) {
    const tableName = `${untrackRequest.args.table.schema}.${untrackRequest.args.table.name}`;
    debug(`  üìù Untracking table ${tableName}...`);
    await hasura.v1(untrackRequest);
     // Note: hasura.v1 handles 'not found' messages internally
  }
  debug('‚úÖ Tables untracked.');
}

async function dropTables() {
  debug('üßπ Dropping tables users and accounts...');
  await hasura.sql(dropTablesSQL);
  debug('‚úÖ Tables dropped successfully.');
}

async function down() {
  debug('üöÄ Starting Hasura migration DOWN...');
  try {
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ), —Ç.–∫. –æ–Ω–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ç–∞–±–ª–∏—Ü
    await dropMetadata();

    // –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º —Å–∞–º–∏ —Ç–∞–±–ª–∏—Ü—ã
    await dropTables();

    debug('‚ú® Hasura migration DOWN completed successfully!');
  } catch (error) {
    console.error('‚ùó Critical error during DOWN migration:', error);
    debug('‚ùå DOWN Migration failed.');
    process.exit(1); // Exit with error code on failure
  }
}

// Run the migration
down();
