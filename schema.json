{
  "first_level_queries": {
    "accounts": {
      "description": "An array relationship",
      "args": {
        "distinct_on": {
          "type": "accounts_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "accounts_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "accounts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "accounts",
      "isList": true,
      "returning_fields": {
        "access_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "expires_at": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token_secret": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider_account_id": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "refresh_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "scope": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "session_state": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "token_type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "accounts_aggregate": {
      "description": "An aggregate relationship",
      "args": {
        "distinct_on": {
          "type": "accounts_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "accounts_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "accounts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "accounts_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "accounts_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "accounts",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "accounts_by_pk": {
      "description": "fetch data from the table: \"accounts\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "accounts",
      "isList": false,
      "returning_fields": {
        "access_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "expires_at": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token_secret": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider_account_id": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "refresh_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "scope": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "session_state": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "token_type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_ai": {
      "description": "fetch data from the table: \"badma.ai\"",
      "args": {
        "distinct_on": {
          "type": "badma_ai_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_ai_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_ai_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "join": {
          "type": "badma_joins",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "join_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_ai_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.ai\"",
      "args": {
        "distinct_on": {
          "type": "badma_ai_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_ai_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_ai_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_ai_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_ai",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_ai_by_pk": {
      "description": "fetch data from the table: \"badma.ai\" using primary key columns",
      "args": {
        "id": {
          "type": "bigint",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_ai",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "join": {
          "type": "badma_joins",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "join_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_conflicts": {
      "description": "fetch data from the table: \"badma.conflicts\"",
      "args": {
        "distinct_on": {
          "type": "badma_conflicts_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_conflicts_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_conflicts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "error": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_conflicts_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.conflicts\"",
      "args": {
        "distinct_on": {
          "type": "badma_conflicts_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_conflicts_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_conflicts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_conflicts_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_conflicts",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_conflicts_by_pk": {
      "description": "fetch data from the table: \"badma.conflicts\" using primary key columns",
      "args": {
        "id": {
          "type": "bigint",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "error": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_games": {
      "description": "fetch data from the table: \"badma.games\"",
      "args": {
        "distinct_on": {
          "type": "badma_games_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_games_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_games_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_games",
      "isList": true,
      "returning_fields": {
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "fen": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "mode": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "sides": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_games_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.games\"",
      "args": {
        "distinct_on": {
          "type": "badma_games_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_games_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_games_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_games_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_games_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_games",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_games_by_pk": {
      "description": "fetch data from the table: \"badma.games\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_games",
      "isList": false,
      "returning_fields": {
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "fen": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "mode": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "sides": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_joins": {
      "description": "fetch data from the table: \"badma.joins\"",
      "args": {
        "distinct_on": {
          "type": "badma_joins_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_joins_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_joins_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "role": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "stockfish_bots": {
          "type": "badma_ai",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "stockfish_bots_aggregate": {
          "type": "badma_ai_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_joins_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.joins\"",
      "args": {
        "distinct_on": {
          "type": "badma_joins_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_joins_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_joins_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_joins_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_joins",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_joins_by_pk": {
      "description": "fetch data from the table: \"badma.joins\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_joins",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "role": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "stockfish_bots": {
          "type": "badma_ai",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "stockfish_bots_aggregate": {
          "type": "badma_ai_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_moves": {
      "description": "fetch data from the table: \"badma.moves\"",
      "args": {
        "distinct_on": {
          "type": "badma_moves_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_moves_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_moves_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "from": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "to": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_moves_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.moves\"",
      "args": {
        "distinct_on": {
          "type": "badma_moves_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_moves_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_moves_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_moves_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_moves",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_moves_by_pk": {
      "description": "fetch data from the table: \"badma.moves\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_moves",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "from": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "to": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_servers": {
      "description": "fetch data from the table: \"badma.servers\"",
      "args": {
        "distinct_on": {
          "type": "badma_servers_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_servers_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_servers_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers",
      "isList": true,
      "returning_fields": {
        "active_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "global_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "local_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_servers_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.servers\"",
      "args": {
        "distinct_on": {
          "type": "badma_servers_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_servers_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_servers_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_servers_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_servers",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_servers_by_pk": {
      "description": "fetch data from the table: \"badma.servers\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_servers",
      "isList": false,
      "returning_fields": {
        "active_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "global_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "local_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "users": {
      "description": "fetch data from the table: \"users\"",
      "args": {
        "distinct_on": {
          "type": "users_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "users_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "users_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "users",
      "isList": true,
      "returning_fields": {
        "accounts": {
          "type": "accounts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "accounts_aggregate": {
          "type": "accounts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email_verified": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "games": {
          "type": "badma_games",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "games_aggregate": {
          "type": "badma_games_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "hasura_role": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "image": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "is_admin": {
          "type": "Boolean",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "name": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "updated_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "users_aggregate": {
      "description": "fetch aggregated fields from the table: \"users\"",
      "args": {
        "distinct_on": {
          "type": "users_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "users_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "users_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "users_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "users_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "users",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "users_by_pk": {
      "description": "fetch data from the table: \"users\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "users",
      "isList": false,
      "returning_fields": {
        "accounts": {
          "type": "accounts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "accounts_aggregate": {
          "type": "accounts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email_verified": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "games": {
          "type": "badma_games",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "games_aggregate": {
          "type": "badma_games_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "hasura_role": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "image": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "is_admin": {
          "type": "Boolean",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "name": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "updated_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    }
  },
  "mutations": {
    "delete_accounts": {
      "description": "delete data from the table: \"accounts\"",
      "args": {
        "where": {
          "type": "accounts_bool_exp",
          "description": "filter the rows which have to be deleted",
          "defaultValue": null
        }
      },
      "return_type": "accounts_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "accounts",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "delete_accounts_by_pk": {
      "description": "delete single row from the table: \"accounts\"",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "accounts",
      "isList": false,
      "returning_fields": {
        "access_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "expires_at": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token_secret": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider_account_id": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "refresh_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "scope": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "session_state": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "token_type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "delete_badma_ai": {
      "description": "delete data from the table: \"badma.ai\"",
      "args": {
        "where": {
          "type": "badma_ai_bool_exp",
          "description": "filter the rows which have to be deleted",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_ai",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "delete_badma_ai_by_pk": {
      "description": "delete single row from the table: \"badma.ai\"",
      "args": {
        "id": {
          "type": "bigint",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_ai",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "join": {
          "type": "badma_joins",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "join_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "delete_badma_conflicts": {
      "description": "delete data from the table: \"badma.conflicts\"",
      "args": {
        "where": {
          "type": "badma_conflicts_bool_exp",
          "description": "filter the rows which have to be deleted",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "delete_badma_conflicts_by_pk": {
      "description": "delete single row from the table: \"badma.conflicts\"",
      "args": {
        "id": {
          "type": "bigint",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "error": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "delete_badma_games": {
      "description": "delete data from the table: \"badma.games\"",
      "args": {
        "where": {
          "type": "badma_games_bool_exp",
          "description": "filter the rows which have to be deleted",
          "defaultValue": null
        }
      },
      "return_type": "badma_games_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_games",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "delete_badma_games_by_pk": {
      "description": "delete single row from the table: \"badma.games\"",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_games",
      "isList": false,
      "returning_fields": {
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "fen": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "mode": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "sides": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "delete_badma_joins": {
      "description": "delete data from the table: \"badma.joins\"",
      "args": {
        "where": {
          "type": "badma_joins_bool_exp",
          "description": "filter the rows which have to be deleted",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_joins",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "delete_badma_joins_by_pk": {
      "description": "delete single row from the table: \"badma.joins\"",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_joins",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "role": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "stockfish_bots": {
          "type": "badma_ai",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "stockfish_bots_aggregate": {
          "type": "badma_ai_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "delete_badma_moves": {
      "description": "delete data from the table: \"badma.moves\"",
      "args": {
        "where": {
          "type": "badma_moves_bool_exp",
          "description": "filter the rows which have to be deleted",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_moves",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "delete_badma_moves_by_pk": {
      "description": "delete single row from the table: \"badma.moves\"",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_moves",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "from": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "to": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "delete_badma_servers": {
      "description": "delete data from the table: \"badma.servers\"",
      "args": {
        "where": {
          "type": "badma_servers_bool_exp",
          "description": "filter the rows which have to be deleted",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_servers",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "delete_badma_servers_by_pk": {
      "description": "delete single row from the table: \"badma.servers\"",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_servers",
      "isList": false,
      "returning_fields": {
        "active_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "global_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "local_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "delete_users": {
      "description": "delete data from the table: \"users\"",
      "args": {
        "where": {
          "type": "users_bool_exp",
          "description": "filter the rows which have to be deleted",
          "defaultValue": null
        }
      },
      "return_type": "users_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "users",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "delete_users_by_pk": {
      "description": "delete single row from the table: \"users\"",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "users",
      "isList": false,
      "returning_fields": {
        "accounts": {
          "type": "accounts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "accounts_aggregate": {
          "type": "accounts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email_verified": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "games": {
          "type": "badma_games",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "games_aggregate": {
          "type": "badma_games_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "hasura_role": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "image": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "is_admin": {
          "type": "Boolean",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "name": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "updated_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "insert_accounts": {
      "description": "insert data into the table: \"accounts\"",
      "args": {
        "objects": {
          "type": "accounts_insert_input",
          "description": "the rows to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "accounts_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "accounts_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "accounts",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "insert_accounts_one": {
      "description": "insert a single row into the table: \"accounts\"",
      "args": {
        "object": {
          "type": "accounts_insert_input",
          "description": "the row to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "accounts_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "accounts",
      "isList": false,
      "returning_fields": {
        "access_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "expires_at": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token_secret": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider_account_id": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "refresh_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "scope": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "session_state": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "token_type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "insert_badma_ai": {
      "description": "insert data into the table: \"badma.ai\"",
      "args": {
        "objects": {
          "type": "badma_ai_insert_input",
          "description": "the rows to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_ai_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_ai",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "insert_badma_ai_one": {
      "description": "insert a single row into the table: \"badma.ai\"",
      "args": {
        "object": {
          "type": "badma_ai_insert_input",
          "description": "the row to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_ai_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "join": {
          "type": "badma_joins",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "join_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "insert_badma_conflicts": {
      "description": "insert data into the table: \"badma.conflicts\"",
      "args": {
        "objects": {
          "type": "badma_conflicts_insert_input",
          "description": "the rows to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_conflicts_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "insert_badma_conflicts_one": {
      "description": "insert a single row into the table: \"badma.conflicts\"",
      "args": {
        "object": {
          "type": "badma_conflicts_insert_input",
          "description": "the row to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_conflicts_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "error": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "insert_badma_games": {
      "description": "insert data into the table: \"badma.games\"",
      "args": {
        "objects": {
          "type": "badma_games_insert_input",
          "description": "the rows to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_games_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_games_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_games",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "insert_badma_games_one": {
      "description": "insert a single row into the table: \"badma.games\"",
      "args": {
        "object": {
          "type": "badma_games_insert_input",
          "description": "the row to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_games_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_games",
      "isList": false,
      "returning_fields": {
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "fen": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "mode": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "sides": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "insert_badma_joins": {
      "description": "insert data into the table: \"badma.joins\"",
      "args": {
        "objects": {
          "type": "badma_joins_insert_input",
          "description": "the rows to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_joins_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_joins",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "insert_badma_joins_one": {
      "description": "insert a single row into the table: \"badma.joins\"",
      "args": {
        "object": {
          "type": "badma_joins_insert_input",
          "description": "the row to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_joins_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "role": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "stockfish_bots": {
          "type": "badma_ai",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "stockfish_bots_aggregate": {
          "type": "badma_ai_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "insert_badma_moves": {
      "description": "insert data into the table: \"badma.moves\"",
      "args": {
        "objects": {
          "type": "badma_moves_insert_input",
          "description": "the rows to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_moves_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_moves",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "insert_badma_moves_one": {
      "description": "insert a single row into the table: \"badma.moves\"",
      "args": {
        "object": {
          "type": "badma_moves_insert_input",
          "description": "the row to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_moves_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "from": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "to": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "insert_badma_servers": {
      "description": "insert data into the table: \"badma.servers\"",
      "args": {
        "objects": {
          "type": "badma_servers_insert_input",
          "description": "the rows to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_servers_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_servers",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "insert_badma_servers_one": {
      "description": "insert a single row into the table: \"badma.servers\"",
      "args": {
        "object": {
          "type": "badma_servers_insert_input",
          "description": "the row to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "badma_servers_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers",
      "isList": false,
      "returning_fields": {
        "active_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "global_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "local_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "insert_users": {
      "description": "insert data into the table: \"users\"",
      "args": {
        "objects": {
          "type": "users_insert_input",
          "description": "the rows to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "users_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "users_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "users",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "insert_users_one": {
      "description": "insert a single row into the table: \"users\"",
      "args": {
        "object": {
          "type": "users_insert_input",
          "description": "the row to be inserted",
          "defaultValue": null
        },
        "on_conflict": {
          "type": "users_on_conflict",
          "description": "upsert condition",
          "defaultValue": null
        }
      },
      "return_type": "users",
      "isList": false,
      "returning_fields": {
        "accounts": {
          "type": "accounts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "accounts_aggregate": {
          "type": "accounts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email_verified": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "games": {
          "type": "badma_games",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "games_aggregate": {
          "type": "badma_games_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "hasura_role": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "image": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "is_admin": {
          "type": "Boolean",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "name": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "updated_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_accounts": {
      "description": "update data of the table: \"accounts\"",
      "args": {
        "_inc": {
          "type": "accounts_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "accounts_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "where": {
          "type": "accounts_bool_exp",
          "description": "filter the rows which have to be updated",
          "defaultValue": null
        }
      },
      "return_type": "accounts_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "accounts",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_accounts_by_pk": {
      "description": "update single row of the table: \"accounts\"",
      "args": {
        "_inc": {
          "type": "accounts_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "accounts_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "pk_columns": {
          "type": "accounts_pk_columns_input",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "accounts",
      "isList": false,
      "returning_fields": {
        "access_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "expires_at": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token_secret": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider_account_id": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "refresh_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "scope": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "session_state": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "token_type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_accounts_many": {
      "description": "update multiples rows of table: \"accounts\"",
      "args": {
        "updates": {
          "type": "accounts_updates",
          "description": "updates to execute, in order",
          "defaultValue": null
        }
      },
      "return_type": "accounts_mutation_response",
      "isList": true,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "accounts",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_ai": {
      "description": "update data of the table: \"badma.ai\"",
      "args": {
        "_inc": {
          "type": "badma_ai_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_ai_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "where": {
          "type": "badma_ai_bool_exp",
          "description": "filter the rows which have to be updated",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_ai",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_ai_by_pk": {
      "description": "update single row of the table: \"badma.ai\"",
      "args": {
        "_inc": {
          "type": "badma_ai_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_ai_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "pk_columns": {
          "type": "badma_ai_pk_columns_input",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_ai",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "join": {
          "type": "badma_joins",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "join_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_badma_ai_many": {
      "description": "update multiples rows of table: \"badma.ai\"",
      "args": {
        "updates": {
          "type": "badma_ai_updates",
          "description": "updates to execute, in order",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai_mutation_response",
      "isList": true,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_ai",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_conflicts": {
      "description": "update data of the table: \"badma.conflicts\"",
      "args": {
        "_inc": {
          "type": "badma_conflicts_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_conflicts_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "where": {
          "type": "badma_conflicts_bool_exp",
          "description": "filter the rows which have to be updated",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_conflicts_by_pk": {
      "description": "update single row of the table: \"badma.conflicts\"",
      "args": {
        "_inc": {
          "type": "badma_conflicts_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_conflicts_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "pk_columns": {
          "type": "badma_conflicts_pk_columns_input",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "error": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_badma_conflicts_many": {
      "description": "update multiples rows of table: \"badma.conflicts\"",
      "args": {
        "updates": {
          "type": "badma_conflicts_updates",
          "description": "updates to execute, in order",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts_mutation_response",
      "isList": true,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_games": {
      "description": "update data of the table: \"badma.games\"",
      "args": {
        "_inc": {
          "type": "badma_games_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_games_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "where": {
          "type": "badma_games_bool_exp",
          "description": "filter the rows which have to be updated",
          "defaultValue": null
        }
      },
      "return_type": "badma_games_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_games",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_games_by_pk": {
      "description": "update single row of the table: \"badma.games\"",
      "args": {
        "_inc": {
          "type": "badma_games_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_games_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "pk_columns": {
          "type": "badma_games_pk_columns_input",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_games",
      "isList": false,
      "returning_fields": {
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "fen": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "mode": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "sides": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_badma_games_many": {
      "description": "update multiples rows of table: \"badma.games\"",
      "args": {
        "updates": {
          "type": "badma_games_updates",
          "description": "updates to execute, in order",
          "defaultValue": null
        }
      },
      "return_type": "badma_games_mutation_response",
      "isList": true,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_games",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_joins": {
      "description": "update data of the table: \"badma.joins\"",
      "args": {
        "_inc": {
          "type": "badma_joins_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_joins_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "where": {
          "type": "badma_joins_bool_exp",
          "description": "filter the rows which have to be updated",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_joins",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_joins_by_pk": {
      "description": "update single row of the table: \"badma.joins\"",
      "args": {
        "_inc": {
          "type": "badma_joins_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_joins_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "pk_columns": {
          "type": "badma_joins_pk_columns_input",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_joins",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "role": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "stockfish_bots": {
          "type": "badma_ai",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "stockfish_bots_aggregate": {
          "type": "badma_ai_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_badma_joins_many": {
      "description": "update multiples rows of table: \"badma.joins\"",
      "args": {
        "updates": {
          "type": "badma_joins_updates",
          "description": "updates to execute, in order",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins_mutation_response",
      "isList": true,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_joins",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_moves": {
      "description": "update data of the table: \"badma.moves\"",
      "args": {
        "_inc": {
          "type": "badma_moves_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_moves_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "where": {
          "type": "badma_moves_bool_exp",
          "description": "filter the rows which have to be updated",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_moves",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_moves_by_pk": {
      "description": "update single row of the table: \"badma.moves\"",
      "args": {
        "_inc": {
          "type": "badma_moves_inc_input",
          "description": "increments the numeric columns with given value of the filtered values",
          "defaultValue": null
        },
        "_set": {
          "type": "badma_moves_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "pk_columns": {
          "type": "badma_moves_pk_columns_input",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_moves",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "from": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "to": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_badma_moves_many": {
      "description": "update multiples rows of table: \"badma.moves\"",
      "args": {
        "updates": {
          "type": "badma_moves_updates",
          "description": "updates to execute, in order",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves_mutation_response",
      "isList": true,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_moves",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_servers": {
      "description": "update data of the table: \"badma.servers\"",
      "args": {
        "_set": {
          "type": "badma_servers_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "where": {
          "type": "badma_servers_bool_exp",
          "description": "filter the rows which have to be updated",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_servers",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_badma_servers_by_pk": {
      "description": "update single row of the table: \"badma.servers\"",
      "args": {
        "_set": {
          "type": "badma_servers_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "pk_columns": {
          "type": "badma_servers_pk_columns_input",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_servers",
      "isList": false,
      "returning_fields": {
        "active_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "global_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "local_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_badma_servers_many": {
      "description": "update multiples rows of table: \"badma.servers\"",
      "args": {
        "updates": {
          "type": "badma_servers_updates",
          "description": "updates to execute, in order",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers_mutation_response",
      "isList": true,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "badma_servers",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_users": {
      "description": "update data of the table: \"users\"",
      "args": {
        "_set": {
          "type": "users_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "where": {
          "type": "users_bool_exp",
          "description": "filter the rows which have to be updated",
          "defaultValue": null
        }
      },
      "return_type": "users_mutation_response",
      "isList": false,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "users",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    },
    "update_users_by_pk": {
      "description": "update single row of the table: \"users\"",
      "args": {
        "_set": {
          "type": "users_set_input",
          "description": "sets the columns of the filtered rows to the given values",
          "defaultValue": null
        },
        "pk_columns": {
          "type": "users_pk_columns_input",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "users",
      "isList": false,
      "returning_fields": {
        "accounts": {
          "type": "accounts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "accounts_aggregate": {
          "type": "accounts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email_verified": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "games": {
          "type": "badma_games",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "games_aggregate": {
          "type": "badma_games_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "hasura_role": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "image": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "is_admin": {
          "type": "Boolean",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "name": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "updated_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "update_users_many": {
      "description": "update multiples rows of table: \"users\"",
      "args": {
        "updates": {
          "type": "users_updates",
          "description": "updates to execute, in order",
          "defaultValue": null
        }
      },
      "return_type": "users_mutation_response",
      "isList": true,
      "returning_fields": {
        "affected_rows": {
          "type": "Int",
          "isList": false,
          "description": "number of rows affected by the mutation",
          "args": {}
        },
        "returning": {
          "type": "users",
          "isList": true,
          "description": "data from the rows affected by the mutation",
          "args": {}
        }
      }
    }
  },
  "subscriptions": {
    "accounts": {
      "description": "An array relationship",
      "args": {
        "distinct_on": {
          "type": "accounts_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "accounts_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "accounts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "accounts",
      "isList": true,
      "returning_fields": {
        "access_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "expires_at": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token_secret": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider_account_id": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "refresh_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "scope": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "session_state": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "token_type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "accounts_aggregate": {
      "description": "An aggregate relationship",
      "args": {
        "distinct_on": {
          "type": "accounts_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "accounts_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "accounts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "accounts_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "accounts_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "accounts",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "accounts_by_pk": {
      "description": "fetch data from the table: \"accounts\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "accounts",
      "isList": false,
      "returning_fields": {
        "access_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "expires_at": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token_secret": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider_account_id": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "refresh_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "scope": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "session_state": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "token_type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "accounts_stream": {
      "description": "fetch data from the table in a streaming manner: \"accounts\"",
      "args": {
        "batch_size": {
          "type": "Int",
          "description": "maximum number of rows returned in a single batch",
          "defaultValue": null
        },
        "cursor": {
          "type": "accounts_stream_cursor_input",
          "description": "cursor to stream the results returned by the query",
          "defaultValue": null
        },
        "where": {
          "type": "accounts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "accounts",
      "isList": true,
      "returning_fields": {
        "access_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "expires_at": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "oauth_token_secret": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "provider_account_id": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "refresh_token": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "scope": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "session_state": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "token_type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_ai": {
      "description": "fetch data from the table: \"badma.ai\"",
      "args": {
        "distinct_on": {
          "type": "badma_ai_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_ai_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_ai_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "join": {
          "type": "badma_joins",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "join_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_ai_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.ai\"",
      "args": {
        "distinct_on": {
          "type": "badma_ai_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_ai_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_ai_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_ai_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_ai",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_ai_by_pk": {
      "description": "fetch data from the table: \"badma.ai\" using primary key columns",
      "args": {
        "id": {
          "type": "bigint",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_ai",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "join": {
          "type": "badma_joins",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "join_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_ai_stream": {
      "description": "fetch data from the table in a streaming manner: \"badma.ai\"",
      "args": {
        "batch_size": {
          "type": "Int",
          "description": "maximum number of rows returned in a single batch",
          "defaultValue": null
        },
        "cursor": {
          "type": "badma_ai_stream_cursor_input",
          "description": "cursor to stream the results returned by the query",
          "defaultValue": null
        },
        "where": {
          "type": "badma_ai_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_ai",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "join": {
          "type": "badma_joins",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "join_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_conflicts": {
      "description": "fetch data from the table: \"badma.conflicts\"",
      "args": {
        "distinct_on": {
          "type": "badma_conflicts_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_conflicts_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_conflicts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "error": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_conflicts_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.conflicts\"",
      "args": {
        "distinct_on": {
          "type": "badma_conflicts_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_conflicts_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_conflicts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_conflicts_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_conflicts",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_conflicts_by_pk": {
      "description": "fetch data from the table: \"badma.conflicts\" using primary key columns",
      "args": {
        "id": {
          "type": "bigint",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "error": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_conflicts_stream": {
      "description": "fetch data from the table in a streaming manner: \"badma.conflicts\"",
      "args": {
        "batch_size": {
          "type": "Int",
          "description": "maximum number of rows returned in a single batch",
          "defaultValue": null
        },
        "cursor": {
          "type": "badma_conflicts_stream_cursor_input",
          "description": "cursor to stream the results returned by the query",
          "defaultValue": null
        },
        "where": {
          "type": "badma_conflicts_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_conflicts",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "error": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "bigint",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_games": {
      "description": "fetch data from the table: \"badma.games\"",
      "args": {
        "distinct_on": {
          "type": "badma_games_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_games_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_games_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_games",
      "isList": true,
      "returning_fields": {
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "fen": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "mode": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "sides": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_games_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.games\"",
      "args": {
        "distinct_on": {
          "type": "badma_games_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_games_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_games_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_games_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_games_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_games",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_games_by_pk": {
      "description": "fetch data from the table: \"badma.games\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_games",
      "isList": false,
      "returning_fields": {
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "fen": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "mode": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "sides": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_games_stream": {
      "description": "fetch data from the table in a streaming manner: \"badma.games\"",
      "args": {
        "batch_size": {
          "type": "Int",
          "description": "maximum number of rows returned in a single batch",
          "defaultValue": null
        },
        "cursor": {
          "type": "badma_games_stream_cursor_input",
          "description": "cursor to stream the results returned by the query",
          "defaultValue": null
        },
        "where": {
          "type": "badma_games_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_games",
      "isList": true,
      "returning_fields": {
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "fen": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "mode": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "sides": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_joins": {
      "description": "fetch data from the table: \"badma.joins\"",
      "args": {
        "distinct_on": {
          "type": "badma_joins_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_joins_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_joins_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "role": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "stockfish_bots": {
          "type": "badma_ai",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "stockfish_bots_aggregate": {
          "type": "badma_ai_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_joins_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.joins\"",
      "args": {
        "distinct_on": {
          "type": "badma_joins_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_joins_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_joins_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_joins_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_joins",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_joins_by_pk": {
      "description": "fetch data from the table: \"badma.joins\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_joins",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "role": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "stockfish_bots": {
          "type": "badma_ai",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "stockfish_bots_aggregate": {
          "type": "badma_ai_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_joins_stream": {
      "description": "fetch data from the table in a streaming manner: \"badma.joins\"",
      "args": {
        "batch_size": {
          "type": "Int",
          "description": "maximum number of rows returned in a single batch",
          "defaultValue": null
        },
        "cursor": {
          "type": "badma_joins_stream_cursor_input",
          "description": "cursor to stream the results returned by the query",
          "defaultValue": null
        },
        "where": {
          "type": "badma_joins_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_joins",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "role": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "stockfish_bots": {
          "type": "badma_ai",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "stockfish_bots_aggregate": {
          "type": "badma_ai_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_ai_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_ai_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_ai_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_moves": {
      "description": "fetch data from the table: \"badma.moves\"",
      "args": {
        "distinct_on": {
          "type": "badma_moves_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_moves_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_moves_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "from": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "to": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_moves_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.moves\"",
      "args": {
        "distinct_on": {
          "type": "badma_moves_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_moves_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_moves_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_moves_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_moves",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_moves_by_pk": {
      "description": "fetch data from the table: \"badma.moves\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_moves",
      "isList": false,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "from": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "to": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_moves_stream": {
      "description": "fetch data from the table in a streaming manner: \"badma.moves\"",
      "args": {
        "batch_size": {
          "type": "Int",
          "description": "maximum number of rows returned in a single batch",
          "defaultValue": null
        },
        "cursor": {
          "type": "badma_moves_stream_cursor_input",
          "description": "cursor to stream the results returned by the query",
          "defaultValue": null
        },
        "where": {
          "type": "badma_moves_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_moves",
      "isList": true,
      "returning_fields": {
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "from": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "game": {
          "type": "badma_games",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "game_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "side": {
          "type": "Int",
          "isList": false,
          "description": null,
          "args": {}
        },
        "to": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "type": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "user": {
          "type": "users",
          "isList": false,
          "description": "An object relationship",
          "args": {}
        },
        "user_id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_servers": {
      "description": "fetch data from the table: \"badma.servers\"",
      "args": {
        "distinct_on": {
          "type": "badma_servers_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_servers_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_servers_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers",
      "isList": true,
      "returning_fields": {
        "active_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "global_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "local_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_servers_aggregate": {
      "description": "fetch aggregated fields from the table: \"badma.servers\"",
      "args": {
        "distinct_on": {
          "type": "badma_servers_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "badma_servers_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "badma_servers_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "badma_servers_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "badma_servers",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_servers_by_pk": {
      "description": "fetch data from the table: \"badma.servers\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "badma_servers",
      "isList": false,
      "returning_fields": {
        "active_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "global_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "local_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "badma_servers_stream": {
      "description": "fetch data from the table in a streaming manner: \"badma.servers\"",
      "args": {
        "batch_size": {
          "type": "Int",
          "description": "maximum number of rows returned in a single batch",
          "defaultValue": null
        },
        "cursor": {
          "type": "badma_servers_stream_cursor_input",
          "description": "cursor to stream the results returned by the query",
          "defaultValue": null
        },
        "where": {
          "type": "badma_servers_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "badma_servers",
      "isList": true,
      "returning_fields": {
        "active_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "global_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "local_address": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "users": {
      "description": "fetch data from the table: \"users\"",
      "args": {
        "distinct_on": {
          "type": "users_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "users_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "users_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "users",
      "isList": true,
      "returning_fields": {
        "accounts": {
          "type": "accounts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "accounts_aggregate": {
          "type": "accounts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email_verified": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "games": {
          "type": "badma_games",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "games_aggregate": {
          "type": "badma_games_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "hasura_role": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "image": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "is_admin": {
          "type": "Boolean",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "name": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "updated_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "users_aggregate": {
      "description": "fetch aggregated fields from the table: \"users\"",
      "args": {
        "distinct_on": {
          "type": "users_select_column",
          "description": "distinct select on columns",
          "defaultValue": null
        },
        "limit": {
          "type": "Int",
          "description": "limit the number of rows returned",
          "defaultValue": null
        },
        "offset": {
          "type": "Int",
          "description": "skip the first n rows. Use only with order_by",
          "defaultValue": null
        },
        "order_by": {
          "type": "users_order_by",
          "description": "sort the rows by one or more columns",
          "defaultValue": null
        },
        "where": {
          "type": "users_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "users_aggregate",
      "isList": false,
      "returning_fields": {
        "aggregate": {
          "type": "users_aggregate_fields",
          "isList": false,
          "description": null,
          "args": {}
        },
        "nodes": {
          "type": "users",
          "isList": true,
          "description": null,
          "args": {}
        }
      }
    },
    "users_by_pk": {
      "description": "fetch data from the table: \"users\" using primary key columns",
      "args": {
        "id": {
          "type": "uuid",
          "description": null,
          "defaultValue": null
        }
      },
      "return_type": "users",
      "isList": false,
      "returning_fields": {
        "accounts": {
          "type": "accounts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "accounts_aggregate": {
          "type": "accounts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email_verified": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "games": {
          "type": "badma_games",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "games_aggregate": {
          "type": "badma_games_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "hasura_role": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "image": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "is_admin": {
          "type": "Boolean",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "name": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "updated_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    },
    "users_stream": {
      "description": "fetch data from the table in a streaming manner: \"users\"",
      "args": {
        "batch_size": {
          "type": "Int",
          "description": "maximum number of rows returned in a single batch",
          "defaultValue": null
        },
        "cursor": {
          "type": "users_stream_cursor_input",
          "description": "cursor to stream the results returned by the query",
          "defaultValue": null
        },
        "where": {
          "type": "users_bool_exp",
          "description": "filter the rows returned",
          "defaultValue": null
        }
      },
      "return_type": "users",
      "isList": true,
      "returning_fields": {
        "accounts": {
          "type": "accounts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "accounts_aggregate": {
          "type": "accounts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "accounts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "accounts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "accounts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts": {
          "type": "badma_conflicts",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "conflicts_aggregate": {
          "type": "badma_conflicts_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_conflicts_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_conflicts_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_conflicts_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "created_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "email_verified": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        },
        "games": {
          "type": "badma_games",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "games_aggregate": {
          "type": "badma_games_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_games_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_games_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_games_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "hasura_role": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "id": {
          "type": "uuid",
          "isList": false,
          "description": null,
          "args": {}
        },
        "image": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "is_admin": {
          "type": "Boolean",
          "isList": false,
          "description": null,
          "args": {}
        },
        "joins": {
          "type": "badma_joins",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "joins_aggregate": {
          "type": "badma_joins_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_joins_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_joins_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_joins_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves": {
          "type": "badma_moves",
          "isList": true,
          "description": "An array relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "moves_aggregate": {
          "type": "badma_moves_aggregate",
          "isList": false,
          "description": "An aggregate relationship",
          "args": {
            "distinct_on": {
              "type": "badma_moves_select_column",
              "description": "distinct select on columns",
              "defaultValue": null
            },
            "limit": {
              "type": "Int",
              "description": "limit the number of rows returned",
              "defaultValue": null
            },
            "offset": {
              "type": "Int",
              "description": "skip the first n rows. Use only with order_by",
              "defaultValue": null
            },
            "order_by": {
              "type": "badma_moves_order_by",
              "description": "sort the rows by one or more columns",
              "defaultValue": null
            },
            "where": {
              "type": "badma_moves_bool_exp",
              "description": "filter the rows returned",
              "defaultValue": null
            }
          }
        },
        "name": {
          "type": "String",
          "isList": false,
          "description": null,
          "args": {}
        },
        "updated_at": {
          "type": "timestamptz",
          "isList": false,
          "description": null,
          "args": {}
        }
      }
    }
  },
  "object_relationships": {
    "user": {
      "accounts": true,
      "accounts_by_pk": true,
      "badma_conflicts": true,
      "badma_conflicts_by_pk": true,
      "badma_games": true,
      "badma_games_by_pk": true,
      "badma_joins": true,
      "badma_joins_by_pk": true,
      "badma_moves": true,
      "badma_moves_by_pk": true,
      "delete_accounts_by_pk": true,
      "delete_badma_conflicts_by_pk": true,
      "delete_badma_games_by_pk": true,
      "delete_badma_joins_by_pk": true,
      "delete_badma_moves_by_pk": true,
      "insert_accounts_one": true,
      "insert_badma_conflicts_one": true,
      "insert_badma_games_one": true,
      "insert_badma_joins_one": true,
      "insert_badma_moves_one": true,
      "update_accounts_by_pk": true,
      "update_badma_conflicts_by_pk": true,
      "update_badma_games_by_pk": true,
      "update_badma_joins_by_pk": true,
      "update_badma_moves_by_pk": true,
      "accounts_stream": true,
      "badma_conflicts_stream": true,
      "badma_games_stream": true,
      "badma_joins_stream": true,
      "badma_moves_stream": true
    },
    "aggregate": {
      "accounts_aggregate": true,
      "badma_ai_aggregate": true,
      "badma_conflicts_aggregate": true,
      "badma_games_aggregate": true,
      "badma_joins_aggregate": true,
      "badma_moves_aggregate": true,
      "badma_servers_aggregate": true,
      "users_aggregate": true
    },
    "join": {
      "badma_ai": true,
      "badma_ai_by_pk": true,
      "delete_badma_ai_by_pk": true,
      "insert_badma_ai_one": true,
      "update_badma_ai_by_pk": true,
      "badma_ai_stream": true
    },
    "game": {
      "badma_conflicts": true,
      "badma_conflicts_by_pk": true,
      "badma_joins": true,
      "badma_joins_by_pk": true,
      "badma_moves": true,
      "badma_moves_by_pk": true,
      "delete_badma_conflicts_by_pk": true,
      "delete_badma_joins_by_pk": true,
      "delete_badma_moves_by_pk": true,
      "insert_badma_conflicts_one": true,
      "insert_badma_joins_one": true,
      "insert_badma_moves_one": true,
      "update_badma_conflicts_by_pk": true,
      "update_badma_joins_by_pk": true,
      "update_badma_moves_by_pk": true,
      "badma_conflicts_stream": true,
      "badma_joins_stream": true,
      "badma_moves_stream": true
    },
    "conflicts_aggregate": {
      "badma_games": true,
      "badma_games_by_pk": true,
      "users": true,
      "users_by_pk": true,
      "delete_badma_games_by_pk": true,
      "delete_users_by_pk": true,
      "insert_badma_games_one": true,
      "insert_users_one": true,
      "update_badma_games_by_pk": true,
      "update_users_by_pk": true,
      "badma_games_stream": true,
      "users_stream": true
    },
    "joins_aggregate": {
      "badma_games": true,
      "badma_games_by_pk": true,
      "users": true,
      "users_by_pk": true,
      "delete_badma_games_by_pk": true,
      "delete_users_by_pk": true,
      "insert_badma_games_one": true,
      "insert_users_one": true,
      "update_badma_games_by_pk": true,
      "update_users_by_pk": true,
      "badma_games_stream": true,
      "users_stream": true
    },
    "moves_aggregate": {
      "badma_games": true,
      "badma_games_by_pk": true,
      "users": true,
      "users_by_pk": true,
      "delete_badma_games_by_pk": true,
      "delete_users_by_pk": true,
      "insert_badma_games_one": true,
      "insert_users_one": true,
      "update_badma_games_by_pk": true,
      "update_users_by_pk": true,
      "badma_games_stream": true,
      "users_stream": true
    },
    "stockfish_bots_aggregate": {
      "badma_joins": true,
      "badma_joins_by_pk": true,
      "delete_badma_joins_by_pk": true,
      "insert_badma_joins_one": true,
      "update_badma_joins_by_pk": true,
      "badma_joins_stream": true
    },
    "accounts_aggregate": {
      "users": true,
      "users_by_pk": true,
      "delete_users_by_pk": true,
      "insert_users_one": true,
      "update_users_by_pk": true,
      "users_stream": true
    },
    "games_aggregate": {
      "users": true,
      "users_by_pk": true,
      "delete_users_by_pk": true,
      "insert_users_one": true,
      "update_users_by_pk": true,
      "users_stream": true
    }
  },
  "array_relationships": {
    "nodes": {
      "accounts_aggregate": true,
      "badma_ai_aggregate": true,
      "badma_conflicts_aggregate": true,
      "badma_games_aggregate": true,
      "badma_joins_aggregate": true,
      "badma_moves_aggregate": true,
      "badma_servers_aggregate": true,
      "users_aggregate": true
    },
    "conflicts": {
      "badma_games": true,
      "badma_games_by_pk": true,
      "users": true,
      "users_by_pk": true,
      "delete_badma_games_by_pk": true,
      "delete_users_by_pk": true,
      "insert_badma_games_one": true,
      "insert_users_one": true,
      "update_badma_games_by_pk": true,
      "update_users_by_pk": true,
      "badma_games_stream": true,
      "users_stream": true
    },
    "joins": {
      "badma_games": true,
      "badma_games_by_pk": true,
      "users": true,
      "users_by_pk": true,
      "delete_badma_games_by_pk": true,
      "delete_users_by_pk": true,
      "insert_badma_games_one": true,
      "insert_users_one": true,
      "update_badma_games_by_pk": true,
      "update_users_by_pk": true,
      "badma_games_stream": true,
      "users_stream": true
    },
    "moves": {
      "badma_games": true,
      "badma_games_by_pk": true,
      "users": true,
      "users_by_pk": true,
      "delete_badma_games_by_pk": true,
      "delete_users_by_pk": true,
      "insert_badma_games_one": true,
      "insert_users_one": true,
      "update_badma_games_by_pk": true,
      "update_users_by_pk": true,
      "badma_games_stream": true,
      "users_stream": true
    },
    "stockfish_bots": {
      "badma_joins": true,
      "badma_joins_by_pk": true,
      "delete_badma_joins_by_pk": true,
      "insert_badma_joins_one": true,
      "update_badma_joins_by_pk": true,
      "badma_joins_stream": true
    },
    "accounts": {
      "users": true,
      "users_by_pk": true,
      "delete_users_by_pk": true,
      "insert_users_one": true,
      "update_users_by_pk": true,
      "users_stream": true
    },
    "games": {
      "users": true,
      "users_by_pk": true,
      "delete_users_by_pk": true,
      "insert_users_one": true,
      "update_users_by_pk": true,
      "users_stream": true
    },
    "returning": {
      "delete_accounts": true,
      "delete_badma_ai": true,
      "delete_badma_conflicts": true,
      "delete_badma_games": true,
      "delete_badma_joins": true,
      "delete_badma_moves": true,
      "delete_badma_servers": true,
      "delete_users": true,
      "insert_accounts": true,
      "insert_badma_ai": true,
      "insert_badma_conflicts": true,
      "insert_badma_games": true,
      "insert_badma_joins": true,
      "insert_badma_moves": true,
      "insert_badma_servers": true,
      "insert_users": true,
      "update_accounts": true,
      "update_accounts_many": true,
      "update_badma_ai": true,
      "update_badma_ai_many": true,
      "update_badma_conflicts": true,
      "update_badma_conflicts_many": true,
      "update_badma_games": true,
      "update_badma_games_many": true,
      "update_badma_joins": true,
      "update_badma_joins_many": true,
      "update_badma_moves": true,
      "update_badma_moves_many": true,
      "update_badma_servers": true,
      "update_badma_servers_many": true,
      "update_users": true,
      "update_users_many": true
    }
  }
}